//////////////////////////////////////////////////////////////////////////////////////////
#ifndef __Trovemap_Env__definizione__
#define __Trovemap_Env__definizione__
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
namespace std{}; using namespace std;
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
#include "../roengl/roenpage.hpp"
#include "../karui/karpage.hpp"
#include "../shing/asyncadef.hpp"
#include "../shing/classdef.hpp"
#include "../shing/flectordefs.hpp"
#include "../shing/commlister.hpp"
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
using namespace KarUI; // yeah!
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
#include "classdef.hpp"
#include "trovekarl.hpp"
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
namespace TroveMap{
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
class Page : public KarPage, 
               public XnlDelegate,
               public Asynca::Asyncable,
               public Shing::Commlister{
   public:
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      TroveKarl * trovekarl;
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      string savedir;
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      Page(RoenGL * roen);
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void performSave();
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void load();
      void resetState();
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void onRoenBecomeActive();
      void onRoenResignActive();
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void initSignols();
      void onActivate(Xnl& xnl);
      void onDeactivate(Xnl& xnl);
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void karpage_onDayChange();
      void karpage_updateHalfsec();
      void karpage_update();
      void updateFiveSecs();
      void onFocusKarletChange(Karlet * thekarl);
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void handleMenuCommand(Command& comm);
      void handleCommand(Command& comm, CommandStatus& cstat);
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      bool karpage_handleTouchBeforeTopbots(const TouchInfo& tinfoil);
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void commlister_list(const string& listname, CommlistItems& items);
      void commlister_listfields(const string& listname, const string& itemid, CommlistFields& fields);
      void commlister_set(const string& listname, const string& itemid, CommlistFields& fieldvals);
      void commlister_delete(const string& listname, const string& itemid);
      string commlister_headermarkup(const string& listname);
      bool commlister_checkAllowItemAdding(const string& listname);
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      void handleURL(const string& method, EasyParser& parsa);
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
};
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
}; // end namespace Trovemap
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
#endif
//////////////////////////////////////////////////////////////////////////////////////////
